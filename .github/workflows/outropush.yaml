name: ci-push

on:
  push:
    
jobs:
  check-origin-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set origin branch
        id: set_branch
        run: echo "origin_branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV

      - name: Check origin branch name
        id: check_branch
        run: |
          if [[ ! "${{ env.origin_branch }}" =~ ^(PRJ-|HOTFIX-|release/).* ]]; then
            echo "Error: Origin branch name must start with PRJ-, HOTFIX-, or release/."
            exit 1
          fi

  code_quality:
    runs-on: ubuntu-latest
    needs: check-origin-branch
    if: always() && needs.check-origin-branch.result == 'success'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Flutter
        run: |
          # Obter a versão mais recente estável do Flutter
          FLUTTER_VERSION=$(curl -s https://storage.googleapis.com/flutter_infra/releases/releases_linux.json | jq -r '.releases[] | select(.channel == "stable") | .version')
          
          # Instalação do Flutter
          wget "https://storage.googleapis.com/flutter_infra/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz"
          tar xf "flutter_linux_${FLUTTER_VERSION}-stable.tar.xz"

          # Configuração das variáveis de ambiente
          echo 'export PATH="$PATH:$PWD/flutter/bin"' >> $GITHUB_ENV
          echo 'export PATH="$PATH:$PWD/flutter/.pub-cache/bin"' >> $GITHUB_ENV

      - name: Check bash
        run: | 
          echo $0  
          which bash   

      - name: Flutter version
        run: flutter --version                     

      - name: Run Lint
        run: flutter analyze --no-pub | grep -v 'TODO:'

      - name: Run tests 
        run: flutter test
